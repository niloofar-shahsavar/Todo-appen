{"ast":null,"code":"var _jsxFileName = \"/Users/nili/Desktop/Todo-app/my-app/src/Components/MyForm.jsx\",\n  _s = $RefreshSig$();\nimport Button from \"./Button\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyForm = ({\n  addItem\n}) => {\n  _s();\n  const [value, setValue] = useState(\"\");\n\n  // useEffect hook to load the value from localStorage when the component mounts\n  useEffect(() => {\n    const storedItem = localStorage.getItem('item');\n    if (storedItem) {\n      setValue(JSON.parse(storedItem));\n    }\n  }, []);\n\n  // useEffect hook to save the value to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('item', JSON.stringify(value));\n  }, [value]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    addItem(value);\n    setValue(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"My-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Write your tasks here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"My-input\",\n        value: value,\n        placeholder: \"Write your task here...\",\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        color: \"blue\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(MyForm, \"Ls15+r1/ZGLDex0aoB9UEIIlNmk=\");\n_c = MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["Button","React","useState","useEffect","jsxDEV","_jsxDEV","MyForm","addItem","_s","value","setValue","storedItem","localStorage","getItem","JSON","parse","setItem","stringify","handleSubmit","e","preventDefault","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","color","_c","$RefreshReg$"],"sources":["/Users/nili/Desktop/Todo-app/my-app/src/Components/MyForm.jsx"],"sourcesContent":["\nimport Button from \"./Button\";\nimport React, { useState, useEffect } from 'react';\n\nexport const MyForm = ({ addItem }) => {\n    const [value, setValue] = useState(\"\");\n\n    // useEffect hook to load the value from localStorage when the component mounts\n    useEffect(() => {\n        const storedItem = localStorage.getItem('item');\n        if (storedItem) {\n            setValue(JSON.parse(storedItem));\n        }\n    }, []);\n\n    // useEffect hook to save the value to localStorage whenever it changes\n    useEffect(() => {\n        localStorage.setItem('item', JSON.stringify(value));\n    }, [value]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        addItem(value);\n        setValue(\"\");\n    }\n\n    return (\n        <div>\n            <form className='My-form' onSubmit={handleSubmit}>\n                <h1>Write your tasks here</h1> <br />\n                <input type='text' className='My-input' value={value} placeholder='Write your task here...' onChange={(e) => setValue(e.target.value)} />\n                <button type=\"submit\" color=\"blue\">Add</button> {/* assuming Button is a custom component */}\n            </form>\n        </div>\n    );\n};\n"],"mappings":";;AACA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMQ,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACZD,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACpC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAR,SAAS,CAAC,MAAM;IACZS,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACR,KAAK,CAAC,CAAC;EACvD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMS,YAAY,GAAGC,CAAC,IAAI;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBb,OAAO,CAACE,KAAK,CAAC;IACdC,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACIL,OAAA;IAAAgB,QAAA,eACIhB,OAAA;MAAMiB,SAAS,EAAC,SAAS;MAACC,QAAQ,EAAEL,YAAa;MAAAG,QAAA,gBAC7ChB,OAAA;QAAAgB,QAAA,EAAI;MAAqB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC,eAAAtB,OAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrCtB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACN,SAAS,EAAC,UAAU;QAACb,KAAK,EAAEA,KAAM;QAACoB,WAAW,EAAC,yBAAyB;QAACC,QAAQ,EAAGX,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAACY,MAAM,CAACtB,KAAK;MAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzItB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAACI,KAAK,EAAC,MAAM;QAAAX,QAAA,EAAC;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACnB,EAAA,CA/BWF,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}